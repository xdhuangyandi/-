ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ((XPONUP_GPON_ALARM_ROGUE == ulAlarm) && (XPONUP_ALARM_CREATE == ulState))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        #if (VOS_LINUX_KERNEL) 
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ((XPONUP_ALARM_CANCEL == ulState) 
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulAlarm == XPONUP_GPON_ALARM_REI_COUNTER )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ((1 == g_ulSD5568PonChipId) && (1 == ulPonId))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulRegState >= GONT_REGSTATE_NUM)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulEvent >= GONT_REGEVN_NUM)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (0 == XPON_MemCmp(&g_stPackageInfo, punPackage, sizeof(GONT_PLOAM_STRU)))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (ulONUID != GONT_GetONUID(ulPonId)) && (PLOAM_ONUID_BROADCAST != ulONUID) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulEventID >= GONT_REGEVN_NUM)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ((((GONT_REGEVN_UPSTREAM_OVERHEAD == ulEventID)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        #if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    #if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (GONT_REGEVN_HWEXT_BROADRANGING == ulEventID)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (0 == VOS_MemCmp(&g_stPackageInfo, punPackage, sizeof(GONT_PLOAM_STRU)))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punKey)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulBIPError > 0)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if ( VOS_OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulAlarmID >= XPONUP_GPON_ALARM_BUTT || ulAlarmStatus > XPONUP_ALARM_CREATE )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulAlarmStatus == XPONUP_ALARM_CREATE )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if ( GONT_IsLinkAlarmKeep( ulPonId, XPONUP_GPON_ALARM_BIT(ulAlarmID)) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if ( GONT_IsLinkAlarmClear( ulPonId, XPONUP_GPON_ALARM_BIT(ulAlarmID)) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( VOS_NULL_PTR != apfnAlarmCallback[ulAlarmID][ulAlarmStatus] )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    #if (VOS_LINUX_KERNEL)    
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_IsLinkAlarmKeep( ulPonId, XPONUP_GPON_ALARM_BIT(XPONUP_GPON_ALARM_LOS)) 
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)  
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (GONT_REGSTATE_OPERATION == GONT_GetCurrentRegState(ulPonId))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (!g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (GONT_REGSTATE_OPERATION == GONT_GetCurrentRegState(ulPonId))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulAlarmState & ulAlarmStateOld )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_REGSTATE_OPERATION == GONT_GetCurrentRegState(ulPonId) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if ( VOS_OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (GONT_REGSTATE_OPERATION == GONT_GetRegState(ulPonId))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( (GONT_REGSTATE_SN != ulStateCurr)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (GONT_REGSTATE_OPERATION != ulStateCurr)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (NULL == pszDestBuf) || (ulDestBufSize <= 1) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulEvent >= GONT_REGEVN_NUM)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (ulEvent <= GONT_REGEVN_OFF_TX_POWER_BY_PW) && (NULL != punRxPloam) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if ( ( GONT_TSYNC0 == ulEvent ) || ( GONT_TSYNC1 == ulEvent ) || (GONT_TYPEBTSYNC1588 == ulEvent))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (g_ulGontTdmProtectTimerHdl != 0)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (0 == g_ulGontTdmProtectTimerHdl)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (TRUE != g_ucGontTdmCutFlowFlag)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OMCI_TAPI_IfCutTdmFlow())
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (NULL == punTxPloam) || (NULL == pszDestBuf) || (ulDestBufSize <= 1) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulMsgID >= USPLOAM_TOTAL_NUM)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (g_ulLastOnuID[ulPonId] != g_stGponOntData[ulPonId].ulONUID)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( PLOAM_ONUID_BROADCAST
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (TRUE == g_ulGponQuickTypebEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( PLOAM_ONUID_BROADCAST
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (TRUE == g_ulGponQuickTypebEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)                
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( PLOAM_ONUID_BROADCAST
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (TRUE == g_ucGontTdmCutFlowFlag)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)            
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (FALSE == g_ucGontTdmCutFlowFlag)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if ((GONT_REGSTATE_RANGING > g_stGponOntData[1 - ulPonId].ulOntRegState)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (!g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL) 
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( PLOAM_ONUID_BROADCAST
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (!g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (TRUE == g_ulGponQuickTypebEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)    
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( PLOAM_ONUID_BROADCAST
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (TRUE == g_ulGponQuickTypebEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)               
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( PLOAM_ONUID_BROADCAST
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (TRUE == g_ulGponQuickTypebEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (!VOS_LINUX_KERNEL)                
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( g_ulIsGontPrintStateEnable )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        #if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ulIdx >= USPLOAM_TOTAL_NUM)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK == ulErrorCode)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if (GPON_TIMEOUT == ulErrorCode)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (g_aulIsGontDebugPrintEnable[ulPonId])
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckRegState(ulPonId,USPLOAM_SN_ONU))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == pucSN)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckRegState(ulPonId,USPLOAM_PASSWORD))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == pucPWD)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckRegState(ulPonId,USPLOAM_ENCRYPTION_KEY))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == pucKey)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckRegState(ulPonId, USPLOAM_REI))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK == ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckRegState(ulPonId,USPLOAM_PST))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( NULL == pvApsMsg )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK == ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punDmMsg)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckRegState(ulPonId,USPLOAM_ACKNOWLEDGE))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != punPackage->stGeneral.ucONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (ulGuardBits < GTC_PLO_GUARD_MINBITS)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulTmp > GTC_PLO_TOTAL_DEFBITS )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (FALSE == punPackage->stUpsteamOverhead.u1PreEqMSts)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulAssignONUID > PLOAM_ONUID_MAX )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckSN(ulPonId, punPackage->stAssignONUID.aucSN, PLOAM_SN_BITS))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if ( VOS_CPU_ENDIAN == VOS_ENDIAN_BIG )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            //if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if ( VOS_CPU_ENDIAN == VOS_ENDIAN_BIG )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if ( VOS_CPU_ENDIAN == VOS_ENDIAN_BIG )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (0 == ucDirect)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (GONT_REGSTATE_RANGING == GONT_GetRegState(ulPonId))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                    if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):                if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if ( VOS_CPU_ENDIAN == VOS_ENDIAN_BIG )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (0 == ucDirect)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (GONT_REGSTATE_RANGING == GONT_GetRegState(ulPonId))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (g_ulLogicDisposePloamEnable)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (GONT_REGSTATE_EMERGENCYSTOP != ulRegState)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != GONT_CheckSN(ulPonId,punPackage->stDisableSN.aucSN, PLOAM_SN_BITS))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (GONT_REGSTATE_EMERGENCYSTOP != ulRegState)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( (GONT_REGSTATE_INIT == ulRegState)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != GONT_CheckSN(ulPonId,punPackage->stDisableSN.aucSN, PLOAM_SN_BITS))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (GONT_REGSTATE_OPERATION == ulRegState)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (PLOAM_ENCRYPTED_VPI == punPackage->stEncryptedPortID.u1Type)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK == ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK == ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( GONT_GetONUID(ulPonId) != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (punPackage->stCfgPortID.u1Active)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (GONT_TimerIsRunning(&g_stGponOntData[ulPonId].stTimerOLTPEE) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( VOS_NULL_PTR != g_stGponOntData[ulPonId].stTimerOLTPEE )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( g_stGponOntData[ulPonId].ucPSTLineNumber == punPackage->stPST.ucLineNumber )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if ( VOS_CPU_ENDIAN == VOS_ENDIAN_BIG )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (ulBERInterval > 0) && (ulBERInterval < (ULONG)PLOAM_BER_INTERVAL_MIN) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if ( VOS_CPU_ENDIAN == VOS_ENDIAN_BIG )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != ulRet)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (VOS_MASK_LSB(VOS_BITSHF_B) & ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulTmp > (GTC_PLO_DELIMITER_BYTES << VOS_BITSHF_B) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (VOS_MASK_LSB(VOS_BITSHF_B) & ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( ulTmp > (GTC_PLO_DELIMITER_BYTES << VOS_BITSHF_B) )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( (GONT_REGSTATE_SN == ulRegState)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if ( (GONT_REGSTATE_OPERATION == ulRegState))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):        if (OK != ulTmp)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ucTypeByOlt == GONT_OLT_OPTIC_CLASS_A_BY_OLT)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if (ucTypeByOlt == GONT_OLT_OPTIC_CLASS_B_BY_OLT)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if (ucTypeByOlt == GONT_OLT_OPTIC_CLASS_B_PLUS_BY_OLT)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if (ucTypeByOlt == GONT_OLT_OPTIC_CLASS_C_BY_OLT)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if (ucTypeByOlt == GONT_OLT_OPTIC_CLASS_C_PLUS_BY_OLT)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):#if (VOS_LINUX_KERNEL)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (lTxOpticalPower > 0)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (fTxOpticalPower > 0)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL_USHORT == punPackage->stPonID.usTxOpticalLevel)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != GONT_CheckSN(ulPonId, punPackage->stDisableSN.aucSN, PLOAM_SN_BITS))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if (OK != GONT_CheckSN(ulPonId, punPackage->stDisableSN.aucSN, PLOAM_SN_BITS))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):            if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ((ulEnableFlag == 0xFF) || (ulEnableFlag == 0xF0) || (ulEnableFlag == 0x0F))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if ((ulEnableFlag == 0x0)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckPWD(ulPonId, punPackage->stRcyPwrByPW.aucPWD, PLOAM_PWD_LEN))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != ulONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (OK != GONT_CheckPWD(ulPonId, punPackage->stOffPwrByPW.aucPWD, PLOAM_PWD_LEN))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( OK != ulRet )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (NULL == punPackage)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ONUID_BROADCAST != punPackage->stGeneral.ucONUID )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if (ucResetFlag == 0xFF)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    else if (ucResetFlag == 1)
ceshi.c (C:\Users\h84121992\Desktop\测试文件):	 if (OK != GONT_CheckSN(ulPonId,punPackage->stReboot.aucSn, PLOAM_SN_BITS))
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ENABLE == ucSwitch )
ceshi.c (C:\Users\h84121992\Desktop\测试文件):    if ( PLOAM_ENABLE == ucSwitch )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( (NULL == pucSrcBuf) || (NULL == pszDestBuf) || ulDestBufSize <= 1)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( NULL == pucSN )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( OK != ulRtn )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( NULL == pucPWD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( NULL == pucPWD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulTmp)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (g_ulLogicDisposePloamEnable)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if (OK != ulTmp)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulTmp)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( (ulONUID > PLOAM_ONUID_MAX) && (PLOAM_ONUID_UNASSIGNED != ulONUID) )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (ulAllocID > PLOAM_ALLOCID_MAX)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (ulOMCIPortID > PLOAM_PORTID_MAX)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)    //lint !e774
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (GONT_GetPreAssignedEqD(ulPonId) == ulPreAssignedEqD)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if ( 0 != ulPreAssignedEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( 0 != ulPreAssignedEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ((GONT_GetPreAssignedEqD(ulPonId) == ulPreAssignedEqD) && (GONT_GetEqDBit(ulPonId) == ulEqDBit))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if ( 0 != ulPreAssignedEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( 0 != ulPreAssignedEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( 0 != ulPreAssignedEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (GONT_GetRandomDelay(ulPonId) == ulValidRandomDelay)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (0 != ulEqD)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if (GONT_GetEqD(ulPonId) == ulEqD)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ((OK != ulRet)&&(0x8a00002c !=ulRet))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ((OK != ulRet)&&(0x8a00002c !=ulRet))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( ulNewEqD == ulOldEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    else if ( ulNewEqD >= ( ulOldEqD + 8 ))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    else if ( (ulNewEqD + 8) <= ulOldEqD)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ( ulNewEqD == ulOldEqD )
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if ((ulNewEqD > ulOldEqD) && ((ulNewEqD - ulOldEqD) <= (3 * 8)))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if (g_ulLogicDisposePloamEnable)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):            if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):                if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    else if ((ulNewEqD < ulOldEqD) && ((ulOldEqD - ulNewEqD) <= (3 * 8)))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if (g_ulLogicDisposePloamEnable)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):            if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):                if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if (g_ulLogicDisposePloamEnable)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):        if (OK != ulRet)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):            if ( (GONT_REGSTATE_POPUP == ulRegState)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):            if (!ROGUEONT_IfRogueOnt((UCHAR)ulPonId))
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):                if ( (GONT_REGSTATE_POPUP == ulRegState)
gont_func.c (src\xpon\xponup\xponstd\gponstd\greg):    if (OK != ulRtn)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID <= MAX_SUPPORT_PORT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == pstPonStat)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL_PTR == pstStat )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((NULL_ULONG != pstStat->ulRxEthUcCnt)&&(NULL_ULONG != pstStat->ulDnMultiCast)&&(NULL_ULONG != pstStat->ulRxEthBcCnt))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((NULL_ULONG != pstStat->ulTxEthUcCnt)&&(NULL_ULONG != pstStat->ulTxEthMcCnt)&&(NULL_ULONG != pstStat->ulTxEthBcCnt))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGGetDeviceSN)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL == pstGmacVersion)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL == pstAllocIDList)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL == pstTcontID )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == pusGemPortID)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == pulOnuID)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucStatus >= SD5103_LASER_STATUS_BUTT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( (SD5103_LASER_OFF == ucLaserMode) && (SD5103_LASER_ON == ucStatus) )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    else if ((SD5103_LASER_AUTO == ucStatus) || (SD5103_LASER_ON == ucStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucStatus >= SD5103_LASER_STATUS_BUTT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    else if ((SD5103_LASER_AUTO == ucStatus) || (SD5103_LASER_ON == ucStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if ((SD5103_LASER_ON == g_stGsdkplatAdpGlobalPara.aucGponLaserStatus[ucGPONPortID])
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == pucOpticalState)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                    if ((GSDKPLAT_SUCC != ulRet) && (0 != astFlowTable[ulNum - 1].ulTcont))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                if ((GSDKPLAT_SUCC != ulRet) && (0 != astFlowTable[ulNum - 1].ulTcont))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if ((GSDKPLAT_SUCC != ulRet) && (0 != astFlowTable[ulNum - 1].ulTcont))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GPON_Adp_IfXgpon())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_PTP_LOS_RECOVERY != ulLosAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGSetDeviceSN)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGSetONTPwd)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGGetONTPwd)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (10 == *pulLen)//10为GPON password 长度
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGSetLoid)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGGetLoid)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGSetCheckCode)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGGetCheckCode)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulPortId >= MAX_SUPPORT_PORT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != 0)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GPON_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (XPONUP_CHIP_HS387 == XPONUP_GetPonChipType((ULONG)ucGPONPortID))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == pucStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != GSDKPLAT_SUCC)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucPortId >= MAX_SUPPORT_PORT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (g_stGsdkplatAdpGlobalPara.aucGponLosEventToExtendState[ucGPONPortID] == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stBrdGponCallback.pfnLosAlarmNotifyExtendFrame)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_LOS == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_BUTT <= ucAlarmStatus )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LCDG_RECOVERY >= ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (ucAlarmStatus == g_aulGponLosStatus[ucGPONPortID][ucAlarmType])
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucState != TMODE_MODE_GPON)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LOS == ucAlarmStatus) || (BRDGPON_PTP_LOS_RECOVERY == ucAlarmStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if ((ucPortMode == TMODE_LIGHT_OFF) && (BRDGPON_PTP_LOS != ucAlarmStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_PTP_LOS == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_BUTT <= ucAlarmStatus )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_LOS == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    else if (BRDGPON_PTP_LOS_RECOVERY == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_ROGUE_ONT == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_ROGUE_ONT_RECOVERY == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stBrdGponCallback.pfnAlarmReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LCDG_RECOVERY >= ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_BUTT <= ucAlarmStatus )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LOS == ucAlarmStatus) || (BRDGPON_PTP_LOS_RECOVERY == ucAlarmStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LOF == ucAlarmStatus) || (BRDGPON_PTP_LOF_RECOVERY == ucAlarmStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_PTP_LOS == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LOS == ucAlarmStatus) || (BRDGPON_PTP_LOS_RECOVERY == ucAlarmStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (ucAlarmStatus == g_aulGponLosStatus[ucGPONPortID][BRDGPON_ALARM_TYPE_LOS])
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_LOS == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    else if (BRDGPON_PTP_LOS_RECOVERY == ucAlarmStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stBrdGponCallback.pfnAlarmReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_PTP_LOS == ucAlarmStatus) || (BRDGPON_PTP_LOS_RECOVERY == ucAlarmStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( (BRDGPON_ONT_STATE_O7 < ucRegStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GSDKPLAT_SUCC != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if ((ucLightStat == TMODE_LIGHT_OFF) && 
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_ONT_STATE_O5 == ucRegStatus)  
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if ((BRDGPON_SUCCESS == ulRet) && ( XPONDRV_REG_STATUS_REGISTERED != ucRegStat))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if ((GPSM_GetActivePhyPortId() == ucGPONPortID) || (TRUE != GPSM_GetTypeDMode()))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    else if ((BRDGPON_ONT_STATE_O6 != ucRegStatus) && (BRDGPON_ONT_STATE_O4 != ucRegStatus))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( (BRDGPON_ONT_STATE_O1 != ucRegStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (NULL_PTR != g_stBrdGponCallback.pfnAlarmReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stBrdGponCallback.pfnRegStatusReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( (BRDGPON_ONT_STATE_O7 < ucRegStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_ONT_STATE_O5 == ucRegStatus)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if ((XPON_PS_GetActivePhyPortId() == ucGPONPortID) || (TRUE != XPON_PS_GetTypeCMode()))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_SUCCESS == ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (XPONDRV_REG_STATUS_REGISTERED != ucRegStat)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (NULL_PTR == g_stBrdGponCallback.pfnAlarmReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (NULL_PTR == g_stBrdGponCallback.pfnAlarmReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGLEDManage)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == g_stBrdGponCallback.pfnRegStatusReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((NULL_PTR == g_stBrdGponCallback.pfnMappingModeAddReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((NULL_PTR == g_stBrdGponCallback.pfnMappingModeDelReport)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (ulRet != NULL_LONG)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if ( GPON_Adp_IfXgpon() )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                if (ulLosAlarmState == 0)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                if (BRDGPON_PTP_LOS == stAlarmMsg.ulPonLinkState)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):                    if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (ulRet != NULL_LONG)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if ( GPON_Adp_IfXgpon() )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL == g_stGsdkplatAdpGlobalPara.ulGponLinkAlarmMsgQID )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL == g_stGsdkplatAdpGlobalPara.ulGponLosEventTaskId )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL == g_stGsdkplatAdpGlobalPara.ulGponRegAlarmMsgQID )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL == g_stGsdkplatAdpGlobalPara.ulGponRegEventTaskId )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL != g_stGsdkplatAdpGlobalPara.ulGponLosEventTaskId )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL != g_stGsdkplatAdpGlobalPara.ulGponLinkAlarmMsgQID )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL != g_stGsdkplatAdpGlobalPara.ulGponRegEventTaskId )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( NULL != g_stGsdkplatAdpGlobalPara.ulGponRegAlarmMsgQID )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (g_stGsdkplatAdpGlobalPara.ulGponClockNotifyTimerId != 0)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (VOS_OK != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (VOS_NULL_PTR != g_stBrdGponCallback.pfnNotifyClockState)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (VOS_NULL_PTR != g_stBrdGponCallback.pfnNotifyClockSwitchProc)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((TMODE_MODE_GPON == TMODE_GetCurrentPortMode((UCHAR)(1 - ulGPONPortID))) && (GPSM_GetActivePhyPortId() != ulGPONPortID))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulGPONPortID >= MAX_SUPPORT_PORT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (BRDGPON_PTP_LOS == ulPonLinkState)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != VOS_OK)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ((BRDGPON_ONT_STATE_O5 == g_aucRegState[ucGPONPortID]) && (BRDGPON_ONT_STATE_O5 != ucRegkState))
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (ulRet != VOS_OK)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= MAX_SUPPORT_PORT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != VOS_OK)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (GPON_Adp_IfXgpon())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= MAX_SUPPORT_PORT)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ulRet != VOS_OK)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulReturn )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulReturn )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulReturn )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulReturn )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulReturn )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( GPON_SUCC != ulReturn )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):            if (BRDGPON_SUCCESS != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == g_stBrdGponCallback.pfnNotifyMngMode)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):        if (GSDKPLAT_SUCC != ulRet)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if ( VOS_OK != ulRet )
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (!ucState)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (ucGPONPortID >= GSDKPLAT_AdaptGetPonNumMax())
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR != g_stGSdkPlatPcfgHooks.pfnPCFGIfRfModule)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (NULL_PTR == g_stGSdkPlatPcfgHooks.pfnPCFGNeedSetDyingGaspReportMode)
gsdkplat_adapt.c (src\xpon\xponup\drvadp\sdkplat):    if (VOS_NULL_PTR == pstAdpHooks)
